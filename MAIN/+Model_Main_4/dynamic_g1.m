function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
% function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T             [#temp variables by 1]     double   vector of temporary terms to be filled by function
%   y             [#dynamic variables by 1]  double   vector of endogenous variables in the order stored
%                                                     in M_.lead_lag_incidence; see the Manual
%   x             [nperiods by M_.exo_nbr]   double   matrix of exogenous variables (in declaration order)
%                                                     for all simulation periods
%   steady_state  [M_.endo_nbr by 1]         double   vector of steady state values
%   params        [M_.param_nbr by 1]        double   vector of parameter values in declaration order
%   it_           scalar                     double   time period for exogenous variables for which
%                                                     to evaluate the model
%   T_flag        boolean                    boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = Model_Main_4.dynamic_g1_tt(T, y, x, params, steady_state, it_);
end
g1 = zeros(57, 74);
g1(1,21)=1+params(3);
g1(1,23)=(-params(3));
g1(1,25)=(-params(2));
g1(1,37)=(-params(20));
g1(2,22)=1+params(3);
g1(2,30)=(-params(3));
g1(2,32)=(-params(2));
g1(2,37)=params(21);
g1(3,23)=params(25);
g1(3,24)=params(25)*(-params(11));
g1(3,25)=(-params(2));
g1(3,37)=(-(params(8)*(1-params(7))*params(24)));
g1(4,30)=params(25);
g1(4,31)=params(25)*(-params(11));
g1(4,32)=(-params(2));
g1(4,37)=params(24)*params(8)*params(7);
g1(5,23)=(-params(27));
g1(5,24)=(-(params(27)*(-params(11))));
g1(5,30)=params(27);
g1(5,31)=(-(params(11)*params(27)));
g1(5,37)=1;
g1(6,24)=params(4);
g1(6,25)=(-params(2));
g1(6,37)=(-params(20));
g1(7,31)=params(4);
g1(7,32)=(-params(2));
g1(7,37)=params(21);
g1(8,25)=(-1);
g1(8,27)=1;
g1(8,37)=(-(params(20)*params(5)));
g1(9,25)=(-1);
g1(9,28)=1;
g1(9,37)=(-((-params(5))*(1-params(20))));
g1(10,32)=(-1);
g1(10,33)=1;
g1(10,37)=(-(params(5)*(1-params(21))));
g1(11,32)=(-1);
g1(11,34)=1;
g1(11,37)=(-(params(21)*(-params(5))));
g1(12,21)=1;
g1(12,23)=(-1);
g1(12,26)=1;
g1(13,22)=1;
g1(13,30)=(-1);
g1(13,35)=1;
g1(14,21)=1+params(3);
g1(14,63)=(-(1+params(3)));
g1(14,23)=(-params(3));
g1(14,65)=params(3);
g1(14,29)=1;
g1(15,22)=1+params(3);
g1(15,64)=(-(1+params(3)));
g1(15,30)=(-params(3));
g1(15,66)=params(3);
g1(15,36)=1;
g1(16,23)=(-params(7));
g1(16,30)=(-(1-params(7)));
g1(16,38)=1;
g1(17,24)=(-params(7));
g1(17,31)=(-(1-params(7)));
g1(17,39)=1;
g1(18,29)=(-params(7));
g1(18,36)=(-(1-params(7)));
g1(18,40)=1;
g1(19,21)=(-(params(22)*(-(1+params(3)))));
g1(19,41)=(-(params(22)*(params(3)+params(27)*params(28))));
g1(19,42)=1;
g1(19,68)=(-params(1));
g1(19,43)=(-(params(22)*(-(params(11)*params(27)*params(28)))));
g1(19,48)=(-(params(22)*(params(25)-params(27)*params(28))));
g1(19,50)=(-(params(22)*(params(25)-params(27)*params(28))*(-params(11))));
g1(20,22)=(-(params(23)*(-(1+params(3)))));
g1(20,41)=(-(params(23)*(params(25)-params(27)*params(29))));
g1(20,43)=(-(params(23)*(params(25)-params(27)*params(29))*(-params(11))));
g1(20,48)=(-(params(23)*(params(3)+params(27)*params(29))));
g1(20,49)=1;
g1(20,71)=(-params(1));
g1(20,50)=(-(params(23)*(-(params(11)*params(27)*params(29)))));
g1(21,41)=1;
g1(21,67)=(-1);
g1(21,68)=(-(1/(params(27)*params(28))));
g1(21,43)=(-params(11));
g1(21,69)=params(11);
g1(21,48)=T(1);
g1(21,70)=(-T(1));
g1(21,50)=(-(params(11)*T(1)));
g1(21,72)=(-(T(1)*(-params(11))));
g1(21,55)=1/(params(27)*params(28));
g1(22,41)=T(2);
g1(22,67)=(-T(2));
g1(22,43)=(-(params(11)*T(2)));
g1(22,69)=(-(T(2)*(-params(11))));
g1(22,48)=1;
g1(22,70)=(-1);
g1(22,71)=(-(1/(params(27)*params(29))));
g1(22,50)=(-params(11));
g1(22,72)=params(11);
g1(22,56)=1/(params(27)*params(29));
g1(23,41)=(-params(27));
g1(23,43)=(-(params(27)*(-params(11))));
g1(23,48)=params(27);
g1(23,50)=(-(params(11)*params(27)));
g1(23,58)=1;
g1(24,21)=1;
g1(24,41)=(-1);
g1(24,44)=1;
g1(25,22)=1;
g1(25,48)=(-1);
g1(25,51)=1;
g1(26,41)=params(25);
g1(26,43)=params(25)*(-params(11));
g1(26,45)=(-params(2));
g1(26,58)=(-(params(8)*(1-params(7))*params(24)));
g1(27,48)=params(25);
g1(27,50)=params(25)*(-params(11));
g1(27,52)=(-params(2));
g1(27,58)=params(24)*params(8)*params(7);
g1(28,45)=(-1);
g1(28,46)=1;
g1(28,58)=(-(params(20)*params(5)));
g1(29,45)=(-1);
g1(29,47)=1;
g1(29,58)=(-((-params(5))*(1-params(20))));
g1(30,52)=(-1);
g1(30,53)=1;
g1(30,58)=(-(params(5)*(1-params(21))));
g1(31,52)=(-1);
g1(31,54)=1;
g1(31,58)=(-(params(21)*(-params(5))));
g1(32,55)=1;
g1(32,57)=(-1);
g1(33,56)=1;
g1(33,57)=(-1);
g1(34,42)=(-params(7));
g1(34,49)=(-(1-params(7)));
g1(34,59)=1;
g1(35,41)=(-params(7));
g1(35,48)=(-(1-params(7)));
g1(35,60)=1;
g1(36,43)=(-params(7));
g1(36,50)=(-(1-params(7)));
g1(36,61)=1;
g1(37,45)=(-params(7));
g1(37,52)=(-(1-params(7)));
g1(37,62)=1;
g1(38,17)=(-0.125);
g1(38,40)=(-1);
g1(38,5)=(-0.7);
g1(38,57)=1;
g1(38,59)=(-2.5);
g1(39,6)=(-params(30));
g1(39,1)=(-0.85);
g1(39,7)=1;
g1(39,42)=(-params(31));
g1(40,11)=(-params(38));
g1(40,2)=(-0.85);
g1(40,12)=1;
g1(40,49)=(-params(39));
g1(41,6)=1;
g1(41,23)=1;
g1(41,41)=(-1);
g1(42,7)=1;
g1(42,24)=1;
g1(42,43)=(-1);
g1(43,8)=1;
g1(43,25)=1;
g1(43,45)=(-1);
g1(44,6)=1;
g1(44,7)=(-1);
g1(44,9)=1;
g1(45,10)=1;
g1(45,29)=1;
g1(45,55)=(-1);
g1(46,16)=1;
g1(46,37)=1;
g1(46,58)=(-1);
g1(47,11)=1;
g1(47,30)=1;
g1(47,48)=(-1);
g1(48,12)=1;
g1(48,31)=1;
g1(48,50)=(-1);
g1(49,13)=1;
g1(49,32)=1;
g1(49,52)=(-1);
g1(50,11)=1;
g1(50,12)=(-1);
g1(50,14)=1;
g1(51,15)=1;
g1(51,36)=1;
g1(51,56)=(-1);
g1(52,6)=(-params(7));
g1(52,11)=(-(1-params(7)));
g1(52,17)=1;
g1(53,7)=(-params(7));
g1(53,12)=(-(1-params(7)));
g1(53,18)=1;
g1(54,8)=(-params(7));
g1(54,13)=(-(1-params(7)));
g1(54,19)=1;
g1(55,20)=1;
g1(55,40)=1;
g1(55,55)=(-1);
g1(56,3)=(-params(42));
g1(56,21)=1;
g1(56,73)=1;
g1(57,4)=(-params(42));
g1(57,22)=1;
g1(57,74)=1;

end
