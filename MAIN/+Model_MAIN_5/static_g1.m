function g1 = static_g1(T, y, x, params, T_flag)
% function g1 = static_g1(T, y, x, params, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T         [#temp variables by 1]  double   vector of temporary terms to be filled by function
%   y         [M_.endo_nbr by 1]      double   vector of endogenous variables in declaration order
%   x         [M_.exo_nbr by 1]       double   vector of exogenous variables in declaration order
%   params    [M_.param_nbr by 1]     double   vector of parameter values in declaration order
%                                              to evaluate the model
%   T_flag    boolean                 boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = MOdel_main_5.static_g1_tt(T, y, x, params);
end
g1 = zeros(141, 141);
g1(1,73)=1+params(3);
g1(1,85)=1;
g1(1,89)=1+params(3)+(-(1+params(3)))*T(1);
g1(1,95)=(-(params(22)*(-(1+params(3)))));
g1(1,101)=1;
g1(1,140)=1+params(31)*(-params(30));
g1(2,74)=1+params(3);
g1(2,86)=1;
g1(2,90)=1+params(3)+(-(1+params(3)))*T(1);
g1(2,96)=(-((-(1+params(3)))*params(23)));
g1(2,102)=1;
g1(2,141)=1+params(31)*(-params(30));
g1(3,73)=(-params(3));
g1(3,75)=params(25);
g1(3,77)=(-params(27));
g1(3,85)=(-1);
g1(3,87)=1;
g1(3,89)=params(3)*T(1)-params(3);
g1(3,91)=(-params(7));
g1(3,117)=1;
g1(4,75)=params(25)*(-params(11));
g1(4,77)=(-(params(27)*(-params(11))));
g1(4,78)=params(4);
g1(4,87)=(-1);
g1(4,92)=(-params(7));
g1(4,118)=1;
g1(5,73)=(-params(2));
g1(5,75)=(-params(2));
g1(5,78)=(-params(2));
g1(5,81)=(-1);
g1(5,82)=(-1);
g1(5,93)=(-params(7));
g1(5,119)=1;
g1(6,81)=1;
g1(6,120)=1;
g1(7,82)=1;
g1(7,121)=1;
g1(8,85)=1;
g1(8,122)=1;
g1(9,87)=1;
g1(9,123)=1;
g1(10,73)=(-params(20));
g1(10,74)=params(21);
g1(10,75)=(-(params(24)*params(8)*(1-params(7))));
g1(10,76)=params(24)*params(7)*params(8);
g1(10,77)=1;
g1(10,78)=(-params(20));
g1(10,79)=params(21);
g1(10,80)=1;
g1(10,81)=(-(params(5)*params(20)));
g1(10,82)=(-((-params(5))*(1-params(20))));
g1(10,83)=(-(params(5)*(1-params(21))));
g1(10,84)=(-(params(21)*(-params(5))));
g1(10,124)=1;
g1(11,89)=1;
g1(11,94)=(-params(7));
g1(11,125)=1;
g1(12,74)=(-params(3));
g1(12,76)=params(25);
g1(12,77)=params(27);
g1(12,86)=(-1);
g1(12,88)=1;
g1(12,90)=params(3)*T(1)-params(3);
g1(12,91)=T(2);
g1(12,126)=1;
g1(13,76)=params(25)*(-params(11));
g1(13,77)=(-(params(27)*params(11)));
g1(13,79)=params(4);
g1(13,88)=(-1);
g1(13,92)=T(2);
g1(13,127)=1;
g1(14,74)=(-params(2));
g1(14,76)=(-params(2));
g1(14,79)=(-params(2));
g1(14,83)=(-1);
g1(14,84)=(-1);
g1(14,93)=T(2);
g1(14,128)=1;
g1(15,83)=1;
g1(15,129)=1;
g1(16,84)=1;
g1(16,130)=1;
g1(17,86)=1;
g1(17,131)=1;
g1(18,88)=1;
g1(18,132)=1;
g1(19,80)=1;
g1(19,133)=1;
g1(20,90)=1;
g1(20,94)=T(2);
g1(20,134)=1;
g1(21,91)=1;
g1(22,92)=1;
g1(23,93)=1;
g1(24,94)=1;
g1(24,138)=1;
g1(25,95)=(-(params(22)*(params(3)+params(27)*params(28))));
g1(25,96)=(-(params(23)*(params(25)-params(27)*params(29))));
g1(25,97)=1-T(1);
g1(25,98)=T(3)+T(1)*(-T(3));
g1(25,99)=(-params(27));
g1(25,101)=(-1);
g1(25,103)=params(25);
g1(25,105)=1;
g1(25,114)=(-params(7));
g1(25,117)=(-1);
g1(26,26)=2;
g1(26,95)=1+T(1)*(-params(1));
g1(26,97)=T(1)*(-T(4));
g1(26,113)=(-params(7));
g1(27,95)=(-(params(22)*(-(params(11)*params(27)*params(28)))));
g1(27,96)=(-(params(23)*(-params(11))*(params(25)-params(27)*params(29))));
g1(27,97)=T(1)*params(11)-params(11);
g1(27,98)=T(1)*(-((-params(11))*T(3)))-params(11)*T(3);
g1(27,99)=(-(params(27)*(-params(11))));
g1(27,103)=params(25)*(-params(11));
g1(27,105)=(-1);
g1(27,115)=(-params(7));
g1(27,118)=(-1);
g1(28,101)=1;
g1(28,122)=(-1);
g1(29,103)=(-params(2));
g1(29,107)=(-1);
g1(29,108)=(-1);
g1(29,116)=(-params(7));
g1(29,119)=(-1);
g1(30,107)=1;
g1(30,120)=(-1);
g1(31,108)=1;
g1(31,121)=(-1);
g1(32,105)=1;
g1(32,123)=(-1);
g1(33,99)=1;
g1(33,100)=1;
g1(33,103)=(-(params(24)*params(8)*(1-params(7))));
g1(33,104)=params(24)*params(7)*params(8);
g1(33,107)=(-(params(5)*params(20)));
g1(33,108)=(-((-params(5))*(1-params(20))));
g1(33,109)=(-(params(5)*(1-params(21))));
g1(33,110)=(-(params(21)*(-params(5))));
g1(33,124)=(-1);
g1(34,97)=T(4);
g1(34,111)=1;
g1(34,125)=(-1);
g1(34,138)=(-1);
g1(35,95)=(-(params(22)*(params(25)-params(27)*params(28))));
g1(35,96)=(-(params(23)*(params(3)+params(27)*params(29))));
g1(35,97)=T(5)+T(1)*(-T(5));
g1(35,98)=1-T(1);
g1(35,99)=params(27);
g1(35,102)=(-1);
g1(35,104)=params(25);
g1(35,106)=1;
g1(35,114)=T(2);
g1(35,126)=(-1);
g1(36,36)=2;
g1(36,96)=1+T(1)*(-params(1));
g1(36,98)=T(1)*(-T(6));
g1(36,113)=T(2);
g1(37,95)=(-(params(22)*(-params(11))*(params(25)-params(27)*params(28))));
g1(37,96)=(-(params(23)*(-(params(11)*params(27)*params(29)))));
g1(37,97)=T(1)*(-((-params(11))*T(5)))-params(11)*T(5);
g1(37,98)=T(1)*params(11)-params(11);
g1(37,99)=(-(params(27)*params(11)));
g1(37,104)=params(25)*(-params(11));
g1(37,106)=(-1);
g1(37,115)=T(2);
g1(37,127)=(-1);
g1(38,102)=1;
g1(38,131)=(-1);
g1(39,104)=(-params(2));
g1(39,109)=(-1);
g1(39,110)=(-1);
g1(39,116)=T(2);
g1(39,128)=(-1);
g1(40,109)=1;
g1(40,129)=(-1);
g1(41,110)=1;
g1(41,130)=(-1);
g1(42,106)=1;
g1(42,132)=(-1);
g1(43,98)=T(6);
g1(43,112)=1;
g1(43,134)=(-1);
g1(44,100)=1;
g1(44,133)=(-1);
g1(45,114)=1;
g1(46,115)=1;
g1(47,116)=1;
g1(48,111)=(-1);
g1(48,112)=(-1);
g1(49,113)=1;
g1(50,117)=1;
g1(50,135)=(-params(7));
g1(51,51)=2;
g1(51,57)=1;
g1(51,118)=1;
g1(51,136)=(-params(7));
g1(51,139)=(-1);
g1(52,119)=1;
g1(52,137)=(-params(7));
g1(53,120)=1;
g1(54,121)=1;
g1(55,123)=1;
g1(56,122)=1;
g1(57,51)=1;
g1(57,57)=2;
g1(57,60)=(-1);
g1(57,124)=1;
g1(58,125)=1;
g1(59,126)=1;
g1(59,135)=T(2);
g1(60,57)=(-1);
g1(60,60)=2;
g1(60,127)=1;
g1(60,136)=T(2);
g1(60,139)=1;
g1(61,128)=1;
g1(61,137)=T(2);
g1(62,129)=1;
g1(63,130)=1;
g1(64,132)=1;
g1(65,131)=1;
g1(66,133)=1;
g1(67,134)=1;
g1(68,135)=1;
g1(69,70)=1;
g1(69,136)=1;
g1(70,69)=1;
g1(70,70)=2;
g1(70,137)=1;
g1(71,138)=1;
g1(72,139)=1;
g1(73,1)=1+params(3);
g1(73,3)=(-params(3));
g1(73,5)=(-params(2));
g1(73,10)=(-params(20));
g1(74,2)=1+params(3);
g1(74,10)=params(21);
g1(74,12)=(-params(3));
g1(74,14)=(-params(2));
g1(75,3)=params(25);
g1(75,4)=params(25)*(-params(11));
g1(75,5)=(-params(2));
g1(75,10)=(-(params(24)*params(8)*(1-params(7))));
g1(76,10)=params(24)*params(7)*params(8);
g1(76,12)=params(25);
g1(76,13)=params(25)*(-params(11));
g1(76,14)=(-params(2));
g1(77,3)=(-params(27));
g1(77,4)=(-(params(27)*(-params(11))));
g1(77,10)=1;
g1(77,12)=params(27);
g1(77,13)=(-(params(27)*params(11)));
g1(78,4)=params(4);
g1(78,5)=(-params(2));
g1(78,10)=(-params(20));
g1(79,10)=params(21);
g1(79,13)=params(4);
g1(79,14)=(-params(2));
g1(80,10)=1;
g1(80,19)=1;
g1(81,5)=(-1);
g1(81,6)=1;
g1(81,10)=(-(params(5)*params(20)));
g1(82,5)=(-1);
g1(82,7)=1;
g1(82,10)=(-((-params(5))*(1-params(20))));
g1(83,10)=(-(params(5)*(1-params(21))));
g1(83,14)=(-1);
g1(83,15)=1;
g1(84,10)=(-(params(21)*(-params(5))));
g1(84,14)=(-1);
g1(84,16)=1;
g1(85,1)=1;
g1(85,3)=(-1);
g1(85,8)=1;
g1(86,2)=1;
g1(86,12)=(-1);
g1(86,17)=1;
g1(87,3)=1;
g1(87,4)=(-1);
g1(87,9)=1;
g1(88,12)=1;
g1(88,13)=(-1);
g1(88,18)=1;
g1(89,11)=1;
g1(90,20)=1;
g1(91,3)=(-params(7));
g1(91,12)=T(2);
g1(91,21)=1;
g1(92,4)=(-params(7));
g1(92,13)=T(2);
g1(92,22)=1;
g1(93,5)=(-params(7));
g1(93,14)=T(2);
g1(93,23)=1;
g1(94,11)=(-params(7));
g1(94,20)=T(2);
g1(94,24)=1;
g1(95,1)=(-(params(22)*(-(1+params(3)))));
g1(95,25)=(-(params(22)*(params(3)+params(27)*params(28))));
g1(95,26)=1-params(1);
g1(95,27)=(-(params(22)*(-(params(11)*params(27)*params(28)))));
g1(95,35)=(-(params(22)*(params(25)-params(27)*params(28))));
g1(95,37)=(-(params(22)*(-params(11))*(params(25)-params(27)*params(28))));
g1(96,2)=(-((-(1+params(3)))*params(23)));
g1(96,25)=(-(params(23)*(params(25)-params(27)*params(29))));
g1(96,27)=(-(params(23)*(-params(11))*(params(25)-params(27)*params(29))));
g1(96,35)=(-(params(23)*(params(3)+params(27)*params(29))));
g1(96,36)=1-params(1);
g1(96,37)=(-(params(23)*(-(params(11)*params(27)*params(29)))));
g1(97,26)=(-T(4));
g1(97,34)=T(4);
g1(98,36)=(-T(6));
g1(98,43)=T(6);
g1(99,25)=(-params(27));
g1(99,27)=(-(params(27)*(-params(11))));
g1(99,33)=1;
g1(99,35)=params(27);
g1(99,37)=(-(params(27)*params(11)));
g1(100,33)=1;
g1(100,44)=1;
g1(101,1)=1;
g1(101,25)=(-1);
g1(101,28)=1;
g1(102,2)=1;
g1(102,35)=(-1);
g1(102,38)=1;
g1(103,25)=params(25);
g1(103,27)=params(25)*(-params(11));
g1(103,29)=(-params(2));
g1(103,33)=(-(params(24)*params(8)*(1-params(7))));
g1(104,33)=params(24)*params(7)*params(8);
g1(104,35)=params(25);
g1(104,37)=params(25)*(-params(11));
g1(104,39)=(-params(2));
g1(105,25)=1;
g1(105,27)=(-1);
g1(105,32)=1;
g1(106,35)=1;
g1(106,37)=(-1);
g1(106,42)=1;
g1(107,29)=(-1);
g1(107,30)=1;
g1(107,33)=(-(params(5)*params(20)));
g1(108,29)=(-1);
g1(108,31)=1;
g1(108,33)=(-((-params(5))*(1-params(20))));
g1(109,33)=(-(params(5)*(1-params(21))));
g1(109,39)=(-1);
g1(109,40)=1;
g1(110,33)=(-(params(21)*(-params(5))));
g1(110,39)=(-1);
g1(110,41)=1;
g1(111,34)=1;
g1(111,48)=(-1);
g1(112,43)=1;
g1(112,48)=(-1);
g1(113,26)=(-params(7));
g1(113,36)=T(2);
g1(113,49)=1;
g1(114,25)=(-params(7));
g1(114,35)=T(2);
g1(114,45)=1;
g1(115,27)=(-params(7));
g1(115,37)=T(2);
g1(115,46)=1;
g1(116,29)=(-params(7));
g1(116,39)=T(2);
g1(116,47)=1;
g1(117,3)=1;
g1(117,25)=(-1);
g1(117,50)=1;
g1(118,4)=1;
g1(118,27)=(-1);
g1(118,51)=1;
g1(119,5)=1;
g1(119,29)=(-1);
g1(119,52)=1;
g1(120,6)=1;
g1(120,30)=(-1);
g1(120,53)=1;
g1(121,7)=1;
g1(121,31)=(-1);
g1(121,54)=1;
g1(122,8)=1;
g1(122,28)=(-1);
g1(122,56)=1;
g1(123,9)=1;
g1(123,32)=(-1);
g1(123,55)=1;
g1(124,10)=1;
g1(124,33)=(-1);
g1(124,57)=1;
g1(125,11)=1;
g1(125,34)=(-1);
g1(125,58)=1;
g1(126,12)=1;
g1(126,35)=(-1);
g1(126,59)=1;
g1(127,13)=1;
g1(127,37)=(-1);
g1(127,60)=1;
g1(128,14)=1;
g1(128,39)=(-1);
g1(128,61)=1;
g1(129,15)=1;
g1(129,40)=(-1);
g1(129,62)=1;
g1(130,16)=1;
g1(130,41)=(-1);
g1(130,63)=1;
g1(131,17)=1;
g1(131,38)=(-1);
g1(131,65)=1;
g1(132,18)=1;
g1(132,42)=(-1);
g1(132,64)=1;
g1(133,19)=1;
g1(133,44)=(-1);
g1(133,66)=1;
g1(134,20)=1;
g1(134,43)=(-1);
g1(134,67)=1;
g1(135,50)=(-params(7));
g1(135,59)=T(2);
g1(135,68)=1;
g1(136,51)=(-params(7));
g1(136,60)=T(2);
g1(136,69)=1;
g1(137,52)=(-params(7));
g1(137,61)=T(2);
g1(137,70)=1;
g1(138,24)=1;
g1(138,34)=(-1);
g1(138,71)=1;
g1(139,51)=(-1);
g1(139,60)=1;
g1(139,72)=1;
g1(140,1)=1-params(30);
g1(141,2)=1-params(30);
if ~isreal(g1)
    g1 = real(g1)+2*imag(g1);
end
end
