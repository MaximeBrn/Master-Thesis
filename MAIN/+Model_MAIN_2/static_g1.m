function g1 = static_g1(T, y, x, params, T_flag)
% function g1 = static_g1(T, y, x, params, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T         [#temp variables by 1]  double   vector of temporary terms to be filled by function
%   y         [M_.endo_nbr by 1]      double   vector of endogenous variables in declaration order
%   x         [M_.exo_nbr by 1]       double   vector of exogenous variables in declaration order
%   params    [M_.param_nbr by 1]     double   vector of parameter values in declaration order
%                                              to evaluate the model
%   T_flag    boolean                 boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = MODEL_MAIN_2.static_g1_tt(T, y, x, params);
end
g1 = zeros(121, 121);
g1(1,1)=params(7)*0.5*2*params(3);
g1(1,106)=(-params(24));
g1(1,107)=(-params(28));
g1(1,108)=1;
g1(1,111)=1;
g1(1,117)=(-params(7));
g1(2,2)=params(7)*0.5*2*params(11)*params(4);
g1(2,106)=1;
g1(2,109)=1;
g1(2,111)=(-1);
g1(2,118)=(-params(7));
g1(3,3)=params(7)*0.5*(2*params(2)*(1-params(11))+2*T(1));
g1(3,12)=params(7)*0.5*T(1)*(-2);
g1(3,110)=1;
g1(3,119)=(-params(7));
g1(4,111)=1;
g1(5,5)=0.5*(1-params(7))*2*params(3);
g1(5,106)=(-params(25));
g1(5,107)=(-params(29));
g1(5,112)=1;
g1(5,115)=1;
g1(5,117)=T(2);
g1(6,6)=0.5*(1-params(7))*2*params(11)*params(4);
g1(6,107)=1;
g1(6,113)=1;
g1(6,115)=(-1);
g1(6,118)=T(2);
g1(7,7)=0.5*(1-params(7))*(2*params(2)*(1-params(11))+2*T(3));
g1(7,12)=0.5*(1-params(7))*T(3)*(-2);
g1(7,114)=1;
g1(7,119)=T(2);
g1(8,115)=1;
g1(9,116)=1;
g1(10,117)=1;
g1(11,118)=1;
g1(12,3)=params(7)*0.5*T(1)*(-2);
g1(12,7)=0.5*(1-params(7))*T(3)*(-2);
g1(12,12)=params(7)*0.5*2*T(1)+0.5*(1-params(7))*2*T(3);
g1(12,119)=1;
g1(13,62)=1+params(3);
g1(13,74)=1;
g1(13,78)=1+params(3)+(-(1+params(3)))*T(4);
g1(13,84)=(-(params(16)*(-(1+params(3)))));
g1(13,90)=1;
g1(13,120)=1+params(33)*(-params(32));
g1(14,63)=1+params(3);
g1(14,75)=1;
g1(14,79)=1+params(3)+(-(1+params(3)))*T(4);
g1(14,85)=(-((-(1+params(3)))*params(17)));
g1(14,91)=1;
g1(14,121)=1+params(33)*(-params(32));
g1(15,62)=(-params(3));
g1(15,64)=params(19);
g1(15,66)=(-params(21));
g1(15,74)=(-1);
g1(15,76)=1;
g1(15,78)=params(3)*T(4)-params(3);
g1(15,80)=(-params(7));
g1(15,108)=1;
g1(16,64)=params(19)*(-params(11));
g1(16,66)=(-(params(21)*(-params(11))));
g1(16,67)=params(4);
g1(16,76)=(-1);
g1(16,81)=(-params(7));
g1(16,109)=1;
g1(17,62)=(-params(2));
g1(17,64)=(-params(2));
g1(17,67)=(-params(2));
g1(17,70)=(-1);
g1(17,71)=(-1);
g1(17,82)=(-params(7));
g1(17,110)=1;
g1(18,70)=1;
g1(19,71)=1;
g1(20,74)=1;
g1(21,76)=1;
g1(22,62)=(-params(14));
g1(22,63)=params(15);
g1(22,64)=(-(params(18)*(1-params(7))*params(8)));
g1(22,65)=params(18)*params(7)*params(8);
g1(22,66)=1;
g1(22,67)=(-params(14));
g1(22,68)=params(15);
g1(22,69)=1;
g1(22,70)=(-(params(14)*params(5)));
g1(22,71)=(-((1-params(14))*(-params(5))));
g1(22,72)=(-(params(5)*(1-params(15))));
g1(22,73)=(-(params(15)*(-params(5))));
g1(22,116)=1;
g1(23,78)=1;
g1(23,83)=(-params(7));
g1(24,63)=(-params(3));
g1(24,65)=params(19);
g1(24,66)=params(21);
g1(24,75)=(-1);
g1(24,77)=1;
g1(24,79)=params(3)*T(4)-params(3);
g1(24,80)=T(2);
g1(24,112)=1;
g1(25,65)=params(19)*(-params(11));
g1(25,66)=(-(params(11)*params(21)));
g1(25,68)=params(4);
g1(25,77)=(-1);
g1(25,81)=T(2);
g1(25,113)=1;
g1(26,63)=(-params(2));
g1(26,65)=(-params(2));
g1(26,68)=(-params(2));
g1(26,72)=(-1);
g1(26,73)=(-1);
g1(26,82)=T(2);
g1(26,114)=1;
g1(27,72)=1;
g1(28,73)=1;
g1(29,75)=1;
g1(30,77)=1;
g1(31,69)=1;
g1(32,79)=1;
g1(32,83)=T(2);
g1(33,80)=1;
g1(34,81)=1;
g1(35,82)=1;
g1(36,83)=1;
g1(37,84)=(-(params(16)*(params(3)+params(21)*params(22))));
g1(37,85)=(-(params(17)*(params(19)-params(21)*params(23))));
g1(37,86)=1-T(4);
g1(37,87)=T(5)+T(4)*(-T(5));
g1(37,88)=(-params(21));
g1(37,90)=(-1);
g1(37,92)=params(19);
g1(37,94)=1;
g1(37,103)=(-params(7));
g1(37,108)=(-1);
g1(38,38)=params(7)*0.5*2*params(6)/params(16);
g1(38,84)=1+T(4)*(-params(1));
g1(38,86)=T(4)*(-T(6));
g1(38,102)=(-params(7));
g1(38,106)=(-params(26));
g1(38,107)=(-params(30));
g1(39,84)=(-(params(16)*(-(params(11)*params(21)*params(22)))));
g1(39,85)=(-(params(17)*(-params(11))*(params(19)-params(21)*params(23))));
g1(39,86)=params(11)*T(4)-params(11);
g1(39,87)=T(4)*(-((-params(11))*T(5)))-params(11)*T(5);
g1(39,88)=(-(params(21)*(-params(11))));
g1(39,92)=params(19)*(-params(11));
g1(39,94)=(-1);
g1(39,104)=(-params(7));
g1(39,109)=(-1);
g1(40,90)=1;
g1(41,92)=(-params(2));
g1(41,96)=(-1);
g1(41,97)=(-1);
g1(41,105)=(-params(7));
g1(41,110)=(-1);
g1(42,96)=1;
g1(43,97)=1;
g1(44,94)=1;
g1(45,88)=1;
g1(45,89)=1;
g1(45,92)=(-(params(18)*(1-params(7))*params(8)));
g1(45,93)=params(18)*params(7)*params(8);
g1(45,96)=(-(params(14)*params(5)));
g1(45,97)=(-((1-params(14))*(-params(5))));
g1(45,98)=(-(params(5)*(1-params(15))));
g1(45,99)=(-(params(15)*(-params(5))));
g1(45,116)=(-1);
g1(46,86)=T(6);
g1(46,100)=1;
g1(47,84)=(-(params(16)*(params(19)-params(21)*params(22))));
g1(47,85)=(-(params(17)*(params(3)+params(21)*params(23))));
g1(47,86)=T(7)+T(4)*(-T(7));
g1(47,87)=1-T(4);
g1(47,88)=params(21);
g1(47,91)=(-1);
g1(47,93)=params(19);
g1(47,95)=1;
g1(47,103)=T(2);
g1(47,112)=(-1);
g1(48,48)=0.5*(1-params(7))*2*params(6)/params(17);
g1(48,85)=1+T(4)*(-params(1));
g1(48,87)=T(4)*(-T(8));
g1(48,102)=T(2);
g1(48,106)=(-params(27));
g1(48,107)=(-params(31));
g1(49,84)=(-(params(16)*(-params(11))*(params(19)-params(21)*params(22))));
g1(49,85)=(-(params(17)*(-(params(11)*params(21)*params(23)))));
g1(49,86)=T(4)*(-((-params(11))*T(7)))-params(11)*T(7);
g1(49,87)=params(11)*T(4)-params(11);
g1(49,88)=(-(params(11)*params(21)));
g1(49,93)=params(19)*(-params(11));
g1(49,95)=(-1);
g1(49,104)=T(2);
g1(49,113)=(-1);
g1(50,91)=1;
g1(51,93)=(-params(2));
g1(51,98)=(-1);
g1(51,99)=(-1);
g1(51,105)=T(2);
g1(51,114)=(-1);
g1(52,98)=1;
g1(53,99)=1;
g1(54,95)=1;
g1(55,87)=T(8);
g1(55,101)=1;
g1(56,89)=1;
g1(57,103)=1;
g1(58,104)=1;
g1(59,105)=1;
g1(60,100)=(-1);
g1(60,101)=(-1);
g1(61,102)=1;
g1(62,13)=1+params(3);
g1(62,15)=(-params(3));
g1(62,17)=(-params(2));
g1(62,22)=(-params(14));
g1(63,14)=1+params(3);
g1(63,22)=params(15);
g1(63,24)=(-params(3));
g1(63,26)=(-params(2));
g1(64,15)=params(19);
g1(64,16)=params(19)*(-params(11));
g1(64,17)=(-params(2));
g1(64,22)=(-(params(18)*(1-params(7))*params(8)));
g1(65,22)=params(18)*params(7)*params(8);
g1(65,24)=params(19);
g1(65,25)=params(19)*(-params(11));
g1(65,26)=(-params(2));
g1(66,15)=(-params(21));
g1(66,16)=(-(params(21)*(-params(11))));
g1(66,22)=1;
g1(66,24)=params(21);
g1(66,25)=(-(params(11)*params(21)));
g1(67,16)=params(4);
g1(67,17)=(-params(2));
g1(67,22)=(-params(14));
g1(68,22)=params(15);
g1(68,25)=params(4);
g1(68,26)=(-params(2));
g1(69,22)=1;
g1(69,31)=1;
g1(70,17)=(-1);
g1(70,18)=1;
g1(70,22)=(-(params(14)*params(5)));
g1(71,17)=(-1);
g1(71,19)=1;
g1(71,22)=(-((1-params(14))*(-params(5))));
g1(72,22)=(-(params(5)*(1-params(15))));
g1(72,26)=(-1);
g1(72,27)=1;
g1(73,22)=(-(params(15)*(-params(5))));
g1(73,26)=(-1);
g1(73,28)=1;
g1(74,13)=1;
g1(74,15)=(-1);
g1(74,20)=1;
g1(75,14)=1;
g1(75,24)=(-1);
g1(75,29)=1;
g1(76,15)=1;
g1(76,16)=(-1);
g1(76,21)=1;
g1(77,24)=1;
g1(77,25)=(-1);
g1(77,30)=1;
g1(78,23)=1;
g1(79,32)=1;
g1(80,15)=(-params(7));
g1(80,24)=T(2);
g1(80,33)=1;
g1(81,16)=(-params(7));
g1(81,25)=T(2);
g1(81,34)=1;
g1(82,17)=(-params(7));
g1(82,26)=T(2);
g1(82,35)=1;
g1(83,23)=(-params(7));
g1(83,32)=T(2);
g1(83,36)=1;
g1(84,13)=(-(params(16)*(-(1+params(3)))));
g1(84,37)=(-(params(16)*(params(3)+params(21)*params(22))));
g1(84,38)=1-params(1);
g1(84,39)=(-(params(16)*(-(params(11)*params(21)*params(22)))));
g1(84,47)=(-(params(16)*(params(19)-params(21)*params(22))));
g1(84,49)=(-(params(16)*(-params(11))*(params(19)-params(21)*params(22))));
g1(85,14)=(-((-(1+params(3)))*params(17)));
g1(85,37)=(-(params(17)*(params(19)-params(21)*params(23))));
g1(85,39)=(-(params(17)*(-params(11))*(params(19)-params(21)*params(23))));
g1(85,47)=(-(params(17)*(params(3)+params(21)*params(23))));
g1(85,48)=1-params(1);
g1(85,49)=(-(params(17)*(-(params(11)*params(21)*params(23)))));
g1(86,38)=(-T(6));
g1(86,46)=T(6);
g1(87,48)=(-T(8));
g1(87,55)=T(8);
g1(88,37)=(-params(21));
g1(88,39)=(-(params(21)*(-params(11))));
g1(88,45)=1;
g1(88,47)=params(21);
g1(88,49)=(-(params(11)*params(21)));
g1(89,45)=1;
g1(89,56)=1;
g1(90,13)=1;
g1(90,37)=(-1);
g1(90,40)=1;
g1(91,14)=1;
g1(91,47)=(-1);
g1(91,50)=1;
g1(92,37)=params(19);
g1(92,39)=params(19)*(-params(11));
g1(92,41)=(-params(2));
g1(92,45)=(-(params(18)*(1-params(7))*params(8)));
g1(93,45)=params(18)*params(7)*params(8);
g1(93,47)=params(19);
g1(93,49)=params(19)*(-params(11));
g1(93,51)=(-params(2));
g1(94,37)=1;
g1(94,39)=(-1);
g1(94,44)=1;
g1(95,47)=1;
g1(95,49)=(-1);
g1(95,54)=1;
g1(96,41)=(-1);
g1(96,42)=1;
g1(96,45)=(-(params(14)*params(5)));
g1(97,41)=(-1);
g1(97,43)=1;
g1(97,45)=(-((1-params(14))*(-params(5))));
g1(98,45)=(-(params(5)*(1-params(15))));
g1(98,51)=(-1);
g1(98,52)=1;
g1(99,45)=(-(params(15)*(-params(5))));
g1(99,51)=(-1);
g1(99,53)=1;
g1(100,46)=1;
g1(100,60)=(-1);
g1(101,55)=1;
g1(101,60)=(-1);
g1(102,38)=(-params(7));
g1(102,48)=T(2);
g1(102,61)=1;
g1(103,37)=(-params(7));
g1(103,47)=T(2);
g1(103,57)=1;
g1(104,39)=(-params(7));
g1(104,49)=T(2);
g1(104,58)=1;
g1(105,41)=(-params(7));
g1(105,51)=T(2);
g1(105,59)=1;
g1(106,1)=(-params(24));
g1(106,2)=1;
g1(106,5)=(-params(25));
g1(106,38)=(-params(26));
g1(106,48)=(-params(27));
g1(107,1)=(-params(28));
g1(107,5)=(-params(29));
g1(107,6)=1;
g1(107,38)=(-params(30));
g1(107,48)=(-params(31));
g1(108,1)=1;
g1(108,15)=1;
g1(108,37)=(-1);
g1(109,2)=1;
g1(109,16)=1;
g1(109,39)=(-1);
g1(110,3)=1;
g1(110,17)=1;
g1(110,41)=(-1);
g1(111,1)=1;
g1(111,2)=(-1);
g1(111,4)=1;
g1(112,5)=1;
g1(112,24)=1;
g1(112,47)=(-1);
g1(113,6)=1;
g1(113,25)=1;
g1(113,49)=(-1);
g1(114,7)=1;
g1(114,26)=1;
g1(114,51)=(-1);
g1(115,5)=1;
g1(115,6)=(-1);
g1(115,8)=1;
g1(116,9)=1;
g1(116,22)=1;
g1(116,45)=(-1);
g1(117,1)=(-params(7));
g1(117,5)=T(2);
g1(117,10)=1;
g1(118,2)=(-params(7));
g1(118,6)=T(2);
g1(118,11)=1;
g1(119,3)=(-params(7));
g1(119,7)=T(2);
g1(119,12)=1;
g1(120,13)=1-params(32);
g1(121,14)=1-params(32);
if ~isreal(g1)
    g1 = real(g1)+2*imag(g1);
end
end
