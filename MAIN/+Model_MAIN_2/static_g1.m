function g1 = static_g1(T, y, x, params, T_flag)
% function g1 = static_g1(T, y, x, params, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T         [#temp variables by 1]  double   vector of temporary terms to be filled by function
%   y         [M_.endo_nbr by 1]      double   vector of endogenous variables in declaration order
%   x         [M_.exo_nbr by 1]       double   vector of exogenous variables in declaration order
%   params    [M_.param_nbr by 1]     double   vector of parameter values in declaration order
%                                              to evaluate the model
%   T_flag    boolean                 boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = MODEL_MAIN_2.static_g1_tt(T, y, x, params);
end
g1 = zeros(89, 89);
g1(1,1)=params(7)*0.5*2*params(3);
g1(1,74)=(-params(24));
g1(1,75)=(-params(28));
g1(1,76)=1;
g1(1,79)=1;
g1(1,85)=(-params(7));
g1(2,2)=params(7)*0.5*2*params(11)*params(4);
g1(2,74)=1;
g1(2,77)=1;
g1(2,79)=(-1);
g1(2,86)=(-params(7));
g1(3,3)=params(7)*0.5*(2*params(2)*(1-params(11))+2*T(1));
g1(3,12)=params(7)*0.5*T(1)*(-2);
g1(3,78)=1;
g1(3,87)=(-params(7));
g1(4,79)=1;
g1(5,5)=0.5*(1-params(7))*2*params(3);
g1(5,74)=(-params(25));
g1(5,75)=(-params(29));
g1(5,80)=1;
g1(5,83)=1;
g1(5,85)=(-(1-params(7)));
g1(6,6)=0.5*(1-params(7))*2*params(11)*params(4);
g1(6,75)=1;
g1(6,81)=1;
g1(6,83)=(-1);
g1(6,86)=(-(1-params(7)));
g1(7,7)=0.5*(1-params(7))*(2*params(2)*(1-params(11))+2*T(2));
g1(7,12)=0.5*(1-params(7))*T(2)*(-2);
g1(7,82)=1;
g1(7,87)=(-(1-params(7)));
g1(8,83)=1;
g1(9,84)=1;
g1(10,85)=1;
g1(11,86)=1;
g1(12,3)=params(7)*0.5*T(1)*(-2);
g1(12,7)=0.5*(1-params(7))*T(2)*(-2);
g1(12,12)=params(7)*0.5*2*T(1)+0.5*(1-params(7))*2*T(2);
g1(12,87)=1;
g1(13,46)=1+params(3);
g1(13,58)=(-(params(16)*(-(1+params(3)))));
g1(13,62)=1;
g1(13,88)=1+params(33)*(-params(32));
g1(14,47)=1+params(3);
g1(14,60)=(-((-(1+params(3)))*params(17)));
g1(14,63)=1;
g1(14,89)=1+params(33)*(-params(32));
g1(15,46)=(-params(3));
g1(15,48)=params(19);
g1(15,50)=(-params(21));
g1(15,76)=1;
g1(16,48)=params(19)*(-params(11));
g1(16,50)=(-(params(21)*(-params(11))));
g1(16,51)=params(4);
g1(16,77)=1;
g1(17,46)=(-params(2));
g1(17,48)=(-params(2));
g1(17,51)=(-params(2));
g1(17,53)=(-1);
g1(17,54)=(-1);
g1(17,78)=1;
g1(18,53)=1;
g1(19,54)=1;
g1(20,47)=(-params(3));
g1(20,49)=params(19);
g1(20,50)=params(21);
g1(20,80)=1;
g1(21,49)=params(19)*(-params(11));
g1(21,50)=(-(params(11)*params(21)));
g1(21,52)=params(4);
g1(21,81)=1;
g1(22,47)=(-params(2));
g1(22,49)=(-params(2));
g1(22,52)=(-params(2));
g1(22,55)=(-1);
g1(22,56)=(-1);
g1(22,82)=1;
g1(23,55)=1;
g1(24,56)=1;
g1(25,46)=(-params(14));
g1(25,47)=params(15);
g1(25,48)=(-(params(18)*(1-params(7))*params(8)));
g1(25,49)=params(18)*params(7)*params(8);
g1(25,50)=1;
g1(25,51)=(-params(14));
g1(25,52)=params(15);
g1(25,53)=(-(params(14)*params(5)));
g1(25,54)=(-((1-params(14))*(-params(5))));
g1(25,55)=(-(params(5)*(1-params(15))));
g1(25,56)=(-(params(15)*(-params(5))));
g1(25,84)=1;
g1(26,57)=1-T(4);
g1(26,58)=(-(params(16)*(params(3)+params(21)*params(22))));
g1(26,59)=T(3)+T(4)*(-T(3));
g1(26,60)=(-(params(17)*(params(19)-params(21)*params(23))));
g1(26,61)=(-params(21));
g1(26,62)=(-1);
g1(26,64)=params(19);
g1(26,71)=(-params(7));
g1(26,76)=(-1);
g1(27,27)=params(7)*0.5*2*params(6)/params(16);
g1(27,57)=T(4)*(-T(5));
g1(27,58)=1+T(4)*(-params(1));
g1(27,70)=(-1);
g1(27,74)=(-params(26));
g1(27,75)=(-params(30));
g1(28,57)=params(11)*T(4)-params(11);
g1(28,58)=(-(params(16)*(-(params(11)*params(21)*params(22)))));
g1(28,59)=T(4)*(-((-params(11))*T(3)))-params(11)*T(3);
g1(28,60)=(-(params(17)*(-params(11))*(params(19)-params(21)*params(23))));
g1(28,61)=(-(params(21)*(-params(11))));
g1(28,64)=params(19)*(-params(11));
g1(28,72)=(-params(7));
g1(28,77)=(-1);
g1(29,62)=1;
g1(30,64)=(-params(2));
g1(30,65)=(-1);
g1(30,66)=(-1);
g1(30,73)=(-params(7));
g1(30,78)=(-1);
g1(31,65)=1;
g1(32,66)=1;
g1(33,57)=T(6)+T(4)*(-T(6));
g1(33,58)=(-(params(16)*(params(19)-params(21)*params(22))));
g1(33,59)=1-T(4);
g1(33,60)=(-(params(17)*(params(3)+params(21)*params(23))));
g1(33,61)=params(21);
g1(33,63)=(-1);
g1(33,67)=params(19);
g1(33,71)=(-(1-params(7)));
g1(33,80)=(-1);
g1(34,34)=0.5*(1-params(7))*2*params(6)/params(17);
g1(34,59)=T(4)*(-T(7));
g1(34,60)=1+T(4)*(-params(1));
g1(34,74)=(-params(27));
g1(34,75)=(-params(31));
g1(35,57)=T(4)*(-((-params(11))*T(6)))-params(11)*T(6);
g1(35,58)=(-(params(16)*(-params(11))*(params(19)-params(21)*params(22))));
g1(35,59)=params(11)*T(4)-params(11);
g1(35,60)=(-(params(17)*(-(params(11)*params(21)*params(23)))));
g1(35,61)=(-(params(11)*params(21)));
g1(35,67)=params(19)*(-params(11));
g1(35,72)=(-(1-params(7)));
g1(35,81)=(-1);
g1(36,63)=1;
g1(37,67)=(-params(2));
g1(37,68)=(-1);
g1(37,69)=(-1);
g1(37,73)=(-(1-params(7)));
g1(37,82)=(-1);
g1(38,68)=1;
g1(39,69)=1;
g1(40,57)=T(5);
g1(40,59)=T(7);
g1(41,61)=1;
g1(41,64)=(-(params(18)*(1-params(7))*params(8)));
g1(41,65)=(-(params(14)*params(5)));
g1(41,66)=(-((1-params(14))*(-params(5))));
g1(41,67)=params(18)*params(7)*params(8);
g1(41,68)=(-(params(5)*(1-params(15))));
g1(41,69)=(-(params(15)*(-params(5))));
g1(41,70)=(1-params(7))*params(33)-(1-params(7));
g1(41,84)=(-1);
g1(42,70)=1;
g1(43,71)=1;
g1(44,72)=1;
g1(45,73)=1;
g1(46,13)=1+params(3);
g1(46,15)=(-params(3));
g1(46,17)=(-params(2));
g1(46,25)=(-params(14));
g1(47,14)=1+params(3);
g1(47,20)=(-params(3));
g1(47,22)=(-params(2));
g1(47,25)=params(15);
g1(48,15)=params(19);
g1(48,16)=params(19)*(-params(11));
g1(48,17)=(-params(2));
g1(48,25)=(-(params(18)*(1-params(7))*params(8)));
g1(49,20)=params(19);
g1(49,21)=params(19)*(-params(11));
g1(49,22)=(-params(2));
g1(49,25)=params(18)*params(7)*params(8);
g1(50,15)=(-params(21));
g1(50,16)=(-(params(21)*(-params(11))));
g1(50,20)=params(21);
g1(50,21)=(-(params(11)*params(21)));
g1(50,25)=1;
g1(51,16)=params(4);
g1(51,17)=(-params(2));
g1(51,25)=(-params(14));
g1(52,21)=params(4);
g1(52,22)=(-params(2));
g1(52,25)=params(15);
g1(53,17)=(-1);
g1(53,18)=1;
g1(53,25)=(-(params(14)*params(5)));
g1(54,17)=(-1);
g1(54,19)=1;
g1(54,25)=(-((1-params(14))*(-params(5))));
g1(55,22)=(-1);
g1(55,23)=1;
g1(55,25)=(-(params(5)*(1-params(15))));
g1(56,22)=(-1);
g1(56,24)=1;
g1(56,25)=(-(params(15)*(-params(5))));
g1(57,27)=(-T(5));
g1(57,40)=T(5);
g1(58,13)=(-(params(16)*(-(1+params(3)))));
g1(58,26)=(-(params(16)*(params(3)+params(21)*params(22))));
g1(58,27)=1-params(1);
g1(58,28)=(-(params(16)*(-(params(11)*params(21)*params(22)))));
g1(58,33)=(-(params(16)*(params(19)-params(21)*params(22))));
g1(58,35)=(-(params(16)*(-params(11))*(params(19)-params(21)*params(22))));
g1(59,34)=(-T(7));
g1(59,40)=T(7);
g1(60,14)=(-((-(1+params(3)))*params(17)));
g1(60,26)=(-(params(17)*(params(19)-params(21)*params(23))));
g1(60,28)=(-(params(17)*(-params(11))*(params(19)-params(21)*params(23))));
g1(60,33)=(-(params(17)*(params(3)+params(21)*params(23))));
g1(60,34)=1-params(1);
g1(60,35)=(-(params(17)*(-(params(11)*params(21)*params(23)))));
g1(61,26)=(-params(21));
g1(61,28)=(-(params(21)*(-params(11))));
g1(61,33)=params(21);
g1(61,35)=(-(params(11)*params(21)));
g1(61,41)=1;
g1(62,13)=1;
g1(62,26)=(-1);
g1(62,29)=1;
g1(63,14)=1;
g1(63,33)=(-1);
g1(63,36)=1;
g1(64,26)=params(19);
g1(64,28)=params(19)*(-params(11));
g1(64,30)=(-params(2));
g1(64,41)=(-(params(18)*(1-params(7))*params(8)));
g1(65,30)=(-1);
g1(65,31)=1;
g1(65,41)=(-(params(14)*params(5)));
g1(66,30)=(-1);
g1(66,32)=1;
g1(66,41)=(-((1-params(14))*(-params(5))));
g1(67,33)=params(19);
g1(67,35)=params(19)*(-params(11));
g1(67,37)=(-params(2));
g1(67,41)=params(18)*params(7)*params(8);
g1(68,37)=(-1);
g1(68,38)=1;
g1(68,41)=(-(params(5)*(1-params(15))));
g1(69,37)=(-1);
g1(69,39)=1;
g1(69,41)=(-(params(15)*(-params(5))));
g1(70,27)=(-1);
g1(70,42)=1;
g1(71,26)=(-params(7));
g1(71,33)=(-(1-params(7)));
g1(71,43)=1;
g1(72,28)=(-params(7));
g1(72,35)=(-(1-params(7)));
g1(72,44)=1;
g1(73,30)=(-params(7));
g1(73,37)=(-(1-params(7)));
g1(73,45)=1;
g1(74,1)=(-params(24));
g1(74,2)=1;
g1(74,5)=(-params(25));
g1(74,27)=(-params(26));
g1(74,34)=(-params(27));
g1(75,1)=(-params(28));
g1(75,5)=(-params(29));
g1(75,6)=1;
g1(75,27)=(-params(30));
g1(75,34)=(-params(31));
g1(76,1)=1;
g1(76,15)=1;
g1(76,26)=(-1);
g1(77,2)=1;
g1(77,16)=1;
g1(77,28)=(-1);
g1(78,3)=1;
g1(78,17)=1;
g1(78,30)=(-1);
g1(79,1)=1;
g1(79,2)=(-1);
g1(79,4)=1;
g1(80,5)=1;
g1(80,20)=1;
g1(80,33)=(-1);
g1(81,6)=1;
g1(81,21)=1;
g1(81,35)=(-1);
g1(82,7)=1;
g1(82,22)=1;
g1(82,37)=(-1);
g1(83,5)=1;
g1(83,6)=(-1);
g1(83,8)=1;
g1(84,9)=1;
g1(84,25)=1;
g1(84,41)=(-1);
g1(85,1)=(-params(7));
g1(85,5)=(-(1-params(7)));
g1(85,10)=1;
g1(86,2)=(-params(7));
g1(86,6)=(-(1-params(7)));
g1(86,11)=1;
g1(87,3)=(-params(7));
g1(87,7)=(-(1-params(7)));
g1(87,12)=1;
g1(88,13)=1-params(32);
g1(89,14)=1-params(32);
if ~isreal(g1)
    g1 = real(g1)+2*imag(g1);
end
end
